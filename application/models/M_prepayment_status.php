<?php class m_prepayment_status extends CI_Model { 	public function __construct() 	{ 		parent::__construct(); 		$this->load->model(array('m_core_apps')); 	} 	function gf_load_data($sParam=null) 	{ 		$oParam = $_POST; 		$oData = $sParam === null ? $oParam['Id_Status_Dokumen'] : $sParam['Id_Status_Dokumen']; 		$sql = "call sp_query('select nIdStatus, sNamaStatus from tm_prepayment_status where sStatusDelete is null and nUnitId_fk = ".$this->session->userdata('nUnitId_fk')." and nIdStatus = ".trim($oData)."')"; 		$rs = $this->db->query($sql); 		return $rs->result_array(); 	} 	function gf_transact() 	{ 		$txtIdStatus = $this->input->post('txtIdStatus', TRUE); 		$txtNamaStatus = $this->input->post('txtNamaStatus', TRUE); 		$txtNamaStatusOld = $this->input->post('txtNamaStatusOld', TRUE); 		$hideMode = $this->input->post('hideMode', TRUE); 		$sReturn = null; 		$UUID = "NULL"; 		if(trim($hideMode) !== "I") 			$UUID = trim($txtIdStatus); 		if(in_array(trim($hideMode), array("I", "U"))) 		{ 			if(strtolower(trim($txtNamaStatus)) !== strtolower(trim($txtNamaStatusOld))) 			{ 				$sRet = json_decode($this->m_core_apps->gf_check_double_data_in_table(array("sTableName" => "tm_prepayment_status", "sFieldName" => "sNamaStatus", "sContent" => trim($txtNamaStatus))), TRUE); 				if(intVal($sRet['status']) === 1) 				{ 					$sReturn = json_encode(array("status" => -1, "message" => trim($sRet['message']))); 					return $sReturn; 					exit(0); 				} 			} 		} 		if(in_array(trim($hideMode), array("D"))) 		{ 			$sRet = json_decode($this->m_core_apps->gf_check_foreign_key_use(array("sDatabaseName" => "logbookdb", "sFieldName" => "nIdStatus_fk", "sContent" => trim($txtIdStatus), "sValueLabel" => "Id Status")), TRUE); 			if(intVal($sRet['status']) === 1) 			{ 				$sReturn = json_encode(array("status" => -1, "message" => trim($sRet['message']))); 				return $sReturn; 				exit(0); 			} 		} 		$sql = "call sp_tm_prepayment_status('".$hideMode."', ".trim($UUID).", '".trim($txtNamaStatus)."', NULL, ".$this->session->userdata('nUnitId_fk').", '".trim($this->session->userdata('sRealName'))."')"; 		$this->db->trans_begin(); 		$this->db->query($sql); 		if ($this->db->trans_status() === FALSE) 		{ 			$this->db->trans_rollback(); 			$sReturn = json_encode(array("status" => -1, "message" => "Failed")); 		} 		else 		{ 			$this->db->trans_commit(); 			$sReturn = json_encode(array("status" => 1, "message" => "Data has been Submitted.")); 		} 		return $sReturn; 	} }